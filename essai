 // Boucle principale du jeu
    SDL_Event event;
    int quit = 0;
    while (!quit) {
        while (SDL_PollEvent(&event) != 0) {
            if (event.type == SDL_QUIT) {
                quit = 1;
            }
        }

        // Logique de jeu ici

        // Effacer le rendu précédent
        SDL_RenderClear(renderer);

        // Dessiner ici

        // Mise à jour de l'affichage
        SDL_RenderPresent(renderer);
    }
    ///

    // Boucle principale du jeu
    SDL_Event event;
    int quit = 0;
    while (!quit) {
        while (SDL_PollEvent(&event) != 0) {
            if (event.type == SDL_QUIT) {
                quit = 1;
            }
            else if (event.type == SDL_MOUSEBUTTONDOWN) {
                // Vérifier si le clic de souris est dans la zone du bouton
                int mouseX, mouseY;
                SDL_GetMouseState(&mouseX, &mouseY);
                if (mouseX >= 100 && mouseX <= 150 && mouseY >= 100 && mouseY <= 150) {
                    printf("You click,Start!\n");
                }
            }
        }

        // Effacer le rendu précédent
        SDL_RenderClear(renderer);

        // Dessiner le bouton rectangulaire
        SDL_Rect buttonRect = {112, 150, 50, 30}; // Position et taille du bouton
        SDL_SetRenderDrawColor(renderer, 255, 0, 0, 255); // Couleur rouge
        SDL_RenderFillRect(renderer, &buttonRect);

        // Dessiner le texte "Start" au-dessus du bouton
        SDL_Surface* textSurface = TTF_RenderText_Solid(font, "Start", textColor);
        SDL_Texture* textTexture = SDL_CreateTextureFromSurface(renderer, textSurface);
        SDL_Rect textRect = {112, 112, 0, 0}; // Position du texte
        SDL_QueryTexture(textTexture, NULL, NULL, &textRect.w, &textRect.h); // Récupérer la taille du texte
        SDL_RenderCopy(renderer, textTexture, NULL, &textRect);

        // Libérer la surface et la texture du texte
        SDL_FreeSurface(textSurface);
        SDL_DestroyTexture(textTexture);

        // Mise à jour de l'affichage
        SDL_RenderPresent(renderer);
    }
